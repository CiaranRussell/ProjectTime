@model List<UserRolesViewModel>

@{
    var userId = ViewBag.userId;
    var userName = ViewBag.UserName;
}

<form method="post" asp-action="ManageUserRoles">
    <input asp-for="@userId" hidden />
    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <h2 class="text-primary">Manage Roles</h2>
            <h5> Add/Remove Roles for User: @userName</h5>
            <hr />
            <div asp-validation-summary="All" class="text-danger"></div>
        </div>
        <div>
            @for (int i = 0; i < Model.Count; i++)
            {
                <div class="form-group form-check m-1">
                    <input type="hidden" asp-for="@Model[i].RoleId" />
                    <input type="hidden" asp-for="@Model[i].RoleName" />
                    <input asp-for="@Model[i].IsSelected" class="form-check-input" type="checkbox"/> @*@Html.DisplayNameFor(model => model[i].IsSelected)*@
                    <label class="form-check-label" asp-for="@Model[i].IsSelected">
                        @Model[i].RoleName 
                    </label>
                </div>
            }
        </div>
            <br />
                <div>
                    <input id="checkBtn" type="submit" value="Update" class="btn btn-primary" style="width:150px"/>
                    <a asp-action="Edit" asp-route-id="@userId" class="btn btn-secondary" style="width:150px">Cancel</a>
                </div>
    </div>
</form>

@*--Remove--*@
@*<script type="text/javascript">

   $('#checkBtn').submit(function(){
    if(!$('#checkBtn input[type="checkbox"]').is(':checked')){
      alert("A User must be assigned at least one Role.");
      return false;
    }
    });
</script>*@

